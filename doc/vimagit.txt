*vimagit*    vimagit is an attempt to reproduce the magnificient Magit to vim.

Author:            Jerome Reybert
Plugin Homepage:   <https://github.com/jreybert/vimagit>

===============================================================================

                               _  _ _ _  _ ____ ____ _ ___     .   ~
                               |  | | |\/| |__| | __ |  |    --|-- ~
                                \/  | |  | |  | |__] |  |      '   ~
                                                             ----- ~

===============================================================================
CONTENTS                                                      *vimagitContents*

  1.  Introduction ................. |vimagitIntroduction|
  2.  Installation ................. |vimagitInstallation|
  3.  Usage ........................ |vimagitUsage|
  4.  Commands ..................... |vimagitCommands|
  5.  Customization ................ |vimagitCustomization|
  6.  FAQ .......................... |vimagitFAQ|


===============================================================================
1. INTRODUCTION                                           *vimagitIntroduction*
                                                                      *vimagit*

vimagit is a plugin which try to mimic the fantastic magit emacs plugin. If you
already know the original plugin, give it a try. If you never have heard about
magit (or maybe emacs), this is IMO the most efficient way to stage hunks and
craft nice commits.

===============================================================================
2. INSTALLATION                                           *vimagitInstallation*

The plugin hierarchy tree respects the vim plugin standard. It is compatible
with pathogen (and most probably vundle).

To install:
>
  cd ~/.vim/bundle
  git clone https://github.com/jreybert/vimagit
<

===============================================================================
3. USAGE                                                         *vimagitUsage*

In a git'ed source directory, once you have some unstaged work, simply type
with :Magit , and here is the magic. A new window appears, with all the diffs
and new files in your directory.

===============================================================================
4. COMMANDS                                                   *vimagitCommands*

IMPORTANT: mappings can have different meanings regarding the cursor position.

Sections:

There are 3 sections:
  * Commit message: this section appears in commit mode (see below). It
    contains the message to be commited.
  * Staged changes: this sections contains all staged files/hunks, ready to
    commit.
  * Unstaged changes: this section contains all unstaged and untracked
    files/hunks.
  * Stash list: this section contains all stahes.

These mappings work in normal mode.

                S     stage/unstage hunk at cursor position
                F     stage/unstage the whole file at cursor position
                R     refresh vimagit buffer
                CC    if not in commit section, set commit mode to "New
                      commit" and show "Commit message" section with brand new
                      commit message
                      if in commit section, commit the all staged changes in
                      commit mode previously set
                CA    if not in commit section, set commit mode to "Amend
                      commit" and show "Commit message" section with previous
                      commit message
                      if in commit section, commit the staged changes in
                      commit mode previously set
                CA    if not in commit section, amend the staged changes into
                      the previous commit
                I     add the file under the cursor in .gitgnore
                

When cursor is in "Unstaged changes" section, S/F mappings will stage. On the
other side, when cursor is in "Staged changes" section, S/F mappings will
unstage.

===============================================================================
5. CUSTOMISATION                                         *vimagitCustomization*

===============================================================================
6. FAQ                                                             *vimagitFAQ*

